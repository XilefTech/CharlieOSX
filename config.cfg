#----------------------------------------------------------------------------------
#
#                               Config file for 
#
#
#                                 CharlieOSX
#
#                    the OS with more control of your Robot
#
#----------------------------------------------------------------------------------
# Here you should configure CharlieOSX, so that it knows, what kind of robot to work with
# Motors and Sensors just require the Letter or number of the port, they're at
# Each motor has a Inverted variable that you can use, if you mounted a motor 'backwards'
# It can be set if you built your robot so that the motors are inversed.
# Every motor has got a '[...]Gears variable. There you can put the amount and type of gearings (if you have some)
# With this, CharlieOSX will calculate the ratios so that you just have to say, how many turns you want at the end of your gear chain.
# Syntax: (the numbers are the amount of teeth) One gear chain: [10, 32, 15] Multiple Gear chains stacked: [[10, 32, 15], [15, 64, 10]]


# Robot wheels
# values in cm
# used for Calculating driving parameters
wheelDistance: 13.5
wheelDiameter: 4.3

# touchSensor in the back of the Robot
backTouchSensor: 0

# bottom viewing light sensors in the front
# used for detection of lines on the floor to follow or to stop at
leftLightSensorPort: 0
rightLightSensorPort: 0

# gyro sensor
# used for accurate driving
gyroSensorPort: 4
gyroInverted: False


# Robot type:
# NORMAL = 2 powered normal wheels
# ALLWHEEL = 4 powered normal wheels
# MECANUM = 4 powered mecanum wheels
robotType: NORMAL

# driving motors
# only use this for a NORMAL robot type, else 0
rightMotorPort: D
rightMotorInverted: False
rightMotorGears: []
leftMotorPort: A
leftMotorInverted: True
leftMotorGears: []

### gearing
# use this, if your robot has got a 4-Way hardware-gearing, else False
useGearing: False
# optional: if you got a light sensor that can be used to 'home' the gearing by sensing RED when the gearing is on port 0
gearingHomeLightSensorPort: 0

# gearing motor for selecting the port
gearingSelectMotorPort: 0
gearingSelectMotorInverted: False
gearingSelectMotorGears: []
# gearing motor for turning the port
gearingTurnMotorPort: 0
gearingTurnMotorInverted: False
gearingTurnMotorGears: []

### action motors:
# if you got Motors for something other than driving
firstActionMotorPort: 0
firstActionMotorInverted: False
firstActionMotorGears: []

secondActionMotorPort: 0
secondActionMotorInverted: False
secondActionMotorGears: []

### driving motors
# only use this for a ALLWHEEL and MECANUM robot type, else every motor 0
frontRightMotorPort: 0
frontRightMotorInverted: False
frontRightMotorGears: []

frontLeftMotorPort: 0
frontLeftMotorInverted: False
frontLeftMotorGears: []

backRightMotorPort: 0
backRightMotorInverted: True
backRightMotorGears: []

backLeftMotorPort: 0
backLeftMotorInverted: True
backLeftMotorGears: []


### FLL:
# Activates different saving slots for programs according to the names given in runNames
# Also activates an option for the competition to run all the programs after each other in the same order as in runNames
FLLMode: True

profileFolderName: profiles

# names of the different runs that you want to complete at FLL
# currently limited to a maximum of 8
# please note that names over x characters will appear shortened on the screen        -> TODO: insert max characters number when known
profileNames: {
  - Crane
  - Elevator
  - Treehouse
  - ConstructRed
  - ConstructBrown
  - Architecture
}

### Experimental options
ignoreBatteryWarning: False